{"version":3,"file":"static/js/945.eae79b27.chunk.js","mappings":"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","sources":["redux/selectors.js","components/PhonebookComponent/ContactItem/ContactItem.styleed.jsx","components/PhonebookComponent/ContactItem/ContactItem.jsx","components/PhonebookComponent/ContactList/ContactList.styled.jsx","components/PhonebookComponent/ContactList/ContactList.jsx","components/PhonebookComponent/Filter/Filter.styled.jsx","components/PhonebookComponent/Filter/Filter.jsx","components/PhonebookComponent/PhonebookForm/PhonebookForm.styled.jsx","components/PhonebookComponent/PhonebookForm/PhonebookForm.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Contacts.jsx","pages/Home.jsx"],"sourcesContent":["// system\nimport { createSelector } from '@reduxjs/toolkit';\n\n// contacts\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n// filter\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  width: 150px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 6px;\n  background-color: lightgray;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  outline: none;\n  border: none;\n  padding: 2px 10px;\n  border-radius: 8px;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    background-color: orangered;\n    color: white;\n  }\n`;\n","// system\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsSlise';\n\n// styles\nimport { Button, Item, Text } from './ContactItem.styleed';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { id, name, phone } = contact;\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <Item>\n        <Text>{name}</Text>\n        <p>{phone}</p>\n        <Button type=\"button\" onClick={handleDelete}>\n          X\n        </Button>\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n`;\n","// system\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\n// components\nimport ContactItem from '../ContactItem/ContactItem';\n\n// styles\n\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  border: 1px solid transparent;\n  outline: none;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin: 20px 0px 0px 95px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: block;\n  text-align: center;\n  margin: 0 auto;\n  outline: none;\n  border: none;\n  padding: 10px 16px;\n  border-radius: 8px;\n  background-color: orangered;\n  color: #fff;\n  opacity: 0.8;\n\n  transition: all 250ms ease;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { FilterWrapper, FilterInput, Button } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(changeFilter(value));\n  };\n\n  const clearFilter = () => {\n    dispatch(changeFilter(''));\n  };\n\n  return (\n    <>\n      <FilterWrapper>\n        <label htmlFor=\"filter\">\n          <FilterInput\n            type=\"text\"\n            id=\"filter\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleFilterChange}\n          />\n        </label>\n\n        <Button type=\"button\" onClick={clearFilter}>\n          Clear\n        </Button>\n      </FilterWrapper>\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: block;\n  text-align: center;\n  margin: 0 auto;\n  outline: none;\n  border: none;\n  padding: 10px 16px;\n  border-radius: 8px;\n  background-color: orangered;\n  color: #fff;\n  opacity: 0.8;\n\n  transition: all 250ms ease;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  justify-content: center;\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  border: 1px solid transparent;\n  outline: none;\n`;\n","// system\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsSlise';\n\nimport { Notify } from 'notiflix';\nimport { Button, Form, FormInput, FormWrapper } from './PhonebookForm.styled';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'phone') {\n      setPhone(value);\n    }\n  };\n\n  const clearForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      id: nanoid(),\n      name,\n      phone,\n    };\n\n    const alreadyExists = contacts.findIndex(item => {\n      const name = item.name.toLowerCase();\n      const newName = contact.name.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      Notify.failure(`${contact.name} is already added to contact list`);\n    } else {\n      dispatch(addContact(contact));\n    }\n\n    clearForm();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormWrapper>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n\n        <FormInput\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          placeholder=\"Enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </FormWrapper>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default PhonebookForm;\n","import styled from '@emotion/styled';\n\nexport const Heading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  color: #fff;\n`;\n\nexport const Wrapper = styled.section`\n  width: 520px;\n  margin: auto;\n  padding: 30px;\n  background-color: #853e2c;\n\n  margin-top: 20px;\n\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { Heading, Wrapper } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Heading>{title}</Heading>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// components\nimport ContactList from 'components/PhonebookComponent/ContactList/ContactList';\nimport Filter from 'components/PhonebookComponent/Filter/Filter';\nimport PhonebookForm from 'components/PhonebookComponent/PhonebookForm/PhonebookForm';\nimport Section from 'components/Section/Section';\nimport { HomeTitle } from './Home';\n\nconst Contacts = () => {\n  return (\n    <>\n      <HomeTitle>Contacts Page</HomeTitle>\n\n      <Section title=\"Phonebook Form\">\n        <PhonebookForm />\n      </Section>\n\n      <Section title=\"Filter\">\n        <Filter />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n","// system\nimport { Link } from 'react-router-dom';\n\n// styled, images\nimport phonebook from '../assets/phonebook.svg.png';\nimport styled from '@emotion/styled';\n\nexport const HomeTitle = styled.h2`\n  text-align: center;\n  font-size: 54px;\n  color: #d8674a;\n`;\nconst HomeImage = styled.img`\n  margin: 0 auto;\n`;\n\nconst Home = () => {\n  return (\n    <div className=\"HomeWrapper\">\n      <HomeTitle>Home Page</HomeTitle>\n      <Link to=\"/contacts\">\n        <HomeImage src={phonebook} alt=\"phonebook\" />\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["selectContacts","state","contacts","items","selectFilteredContacts","createSelector","filter","normalizeFilter","toLowerCase","contact","name","includes","Text","styled","Item","Button","dispatch","useDispatch","id","phone","type","onClick","deleteContact","List","useSelector","map","FilterInput","FilterWrapper","htmlFor","value","onChange","event","currentTarget","changeFilter","Form","FormWrapper","FormInput","useState","setName","setPhone","handleInputChange","onSubmit","preventDefault","nanoid","findIndex","item","Notify","addContact","placeholder","pattern","title","required","Heading","Wrapper","children","Home","HomeTitle","HomeImage","className","to","src","phonebook","alt"],"sourceRoot":""}